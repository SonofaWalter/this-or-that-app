{"ast":null,"code":"var _jsxFileName = \"/Users/tripochenski/Documents/Projects/this-or-that-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\n\n// Main App component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State to hold the currently selected category\n  const [selectedCategory, setSelectedCategory] = useState('Everyday Life');\n  // State for the first displayed option\n  const [optionA, setOptionA] = useState('');\n  // State for the second displayed option\n  const [optionB, setOptionB] = useState('');\n  // State to indicate if options are currently being generated (for loading indicator)\n  const [isLoading, setIsLoading] = useState(false);\n  // State for error messages\n  const [error, setError] = useState('');\n\n  // History state: an array to store previously generated questions\n  // Each item will be an object like { category: string, optionA: string, optionB: string }\n  // History is still maintained internally for potential future features or debugging,\n  // but the \"Previous Question\" button is removed from the UI.\n  const [history, setHistory] = useState([]);\n  // Index to keep track of the current position in the history array\n  const [historyIndex, setHistoryIndex] = useState(-1); // -1 means no question loaded yet\n\n  // Define the categories for the \"This or That\" game\n  const categories = [\"Everyday Life\", \"Superpowers\", \"Travel & Adventure\", \"Food & Drink\", \"Past or Future\", \"Silly Scenarios\", \"Animals\", \"Personal Quirks\", \"Relationships\"];\n\n  /**\n   * Fetches two \"This or That\" options from the Gemini API based on the given category.\n   * This function is responsible only for the API call and returning the raw options.\n   * @param {string} category - The category to generate options for.\n   * @returns {Promise<string[]>} - A promise that resolves to an array of two strings [option1, option2].\n   */\n  const fetchOptionsFromAI = useCallback(async category => {\n    setError(''); // Clear any previous errors\n    try {\n      // In the Canvas environment, process.env is not defined.\n      // The Canvas runtime automatically provides the API key in the fetch call if 'apiKey' is an empty string.\n      // For Netlify deployment, remember to change this back to process.env.REACT_APP_GEMINI_API_KEY.\n      const apiKey = \"\";\n\n      // Construct the prompt for the AI model\n      const prompt = `Generate two distinct, highly creative, engaging, and **completely unique** \"This or That\" options for the category \"${category}\".\n      **Crucially, ensure that the two options use different primary keywords and concepts to avoid any repetition or similarity in wording, even if subtle.**\n      The options should be short phrases and present a clear dilemma.\n      \n      Example for \"Food & Drink\":\n      - \"Eat only bland food for life\"\n      - \"Eat only extremely spicy food for life\"\n      \n      Example for \"Superpowers\":\n      - \"Ability to fly anywhere instantly\"\n      - \"Ability to control minds but only while sleeping\"\n\n      Provide the response in a JSON array format with two strings, like:\n      [\"Option 1 Text\", \"Option 2 Text\"]`;\n\n      // Chat history for the API request\n      let chatHistory = [];\n      chatHistory.push({\n        role: \"user\",\n        parts: [{\n          text: prompt\n        }]\n      });\n\n      // Payload for the Gemini API request\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          responseMimeType: \"application/json\",\n          // Request JSON output\n          responseSchema: {\n            type: \"ARRAY\",\n            // Expect an array\n            items: {\n              type: \"STRING\" // Each item in the array should be a string\n            },\n            minItems: 2,\n            // Ensure at least two items\n            maxItems: 2 // Ensure exactly two items\n          },\n          temperature: 1.0 // MAX temperature for highest randomness and creativity\n          // topP: 0.95, // Can also experiment with topP for diversity\n        }\n      };\n      // --- END ENHANCED PROMPT AND GENERATION CONFIG ---\n\n      // API URL for Gemini 2.0 Flash\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n      // Make the fetch call to the Gemini API\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      // Check if the response is successful\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`HTTP error! Status: ${response.status}. Details: ${JSON.stringify(errorData)}`);\n      }\n\n      // Parse the JSON response\n      const result = await response.json();\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        const jsonString = result.candidates[0].content.parts[0].text;\n        const options = JSON.parse(jsonString);\n        if (Array.isArray(options) && options.length === 2 && typeof options[0] === 'string' && typeof options[1] === 'string') {\n          return options;\n        } else {\n          throw new Error('AI response format was unexpected. Expected an array of two strings.');\n        }\n      } else {\n        throw new Error('Failed to generate options from AI. Response was empty or malformed.');\n      }\n    } catch (err) {\n      console.error(\"Error fetching options:\", err);\n      setError(`Failed to fetch options: ${err.message}. Please check your network or API key configuration.`);\n      return ['', ''];\n    }\n  }, []);\n\n  /**\n   * Generates new options, adds them to history, and updates the display.\n   * This is called when the \"Next Question\" button is clicked or a new category is selected.\n   */\n  const handleGenerateNew = useCallback(async (initialLoad = false) => {\n    setIsLoading(true); // Set loading state to true\n    const newOptions = await fetchOptionsFromAI(selectedCategory);\n    const [newOptionA, newOptionB] = newOptions;\n\n    // Only add to history if options were successfully generated and it's not an initial empty state\n    if (newOptionA || newOptionB) {\n      // Check if at least one option has content\n      const newHistoryItem = {\n        category: selectedCategory,\n        optionA: newOptionA,\n        optionB: newOptionB\n      };\n      setHistory(prevHistory => {\n        // If we are not at the end of the history, truncate the \"future\" history\n        const updatedHistory = initialLoad ? [] : prevHistory.slice(0, historyIndex + 1);\n        return [...updatedHistory, newHistoryItem];\n      });\n\n      // Update history index to point to the newly added item\n      setHistoryIndex(prevIndex => initialLoad ? 0 : prevIndex + 1);\n    } else {\n      // If options failed to generate, clear them from display\n      setOptionA('');\n      setOptionB('');\n    }\n\n    // Set the displayed options\n    setOptionA(newOptionA);\n    setOptionB(newOptionB);\n    setIsLoading(false); // Reset loading state\n  }, [selectedCategory, fetchOptionsFromAI, historyIndex]); // Dependencies for useCallback\n\n  // handlePrevious function is removed as the button is removed.\n  // The history state management remains, but is not exposed via a UI button.\n\n  // Effect to handle initial load and category changes\n  useEffect(() => {\n    const currentQuestion = history[historyIndex];\n    if (!currentQuestion || currentQuestion.category !== selectedCategory) {\n      handleGenerateNew(historyIndex === -1); // Pass true for initial load\n    }\n  }, [selectedCategory, handleGenerateNew, history, historyIndex]); // Dependencies for useEffect\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-green-600 to-emerald-700 flex flex-col items-center justify-center p-4 font-sans text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl font-extrabold mb-8 drop-shadow-lg text-center\",\n      children: \"This or That?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white/10 backdrop-blur-md rounded-2xl p-6 shadow-xl mb-8 w-full max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-center\",\n        children: \"Choose a Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-3\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedCategory(category),\n          className: `\n                px-5 py-3 rounded-xl text-lg font-medium transition-all duration-300 ease-in-out\n                ${selectedCategory === category ? 'bg-emerald-800 text-white shadow-lg scale-105 transform' // Darker emerald for selected\n          : 'bg-green-700 hover:bg-green-600 text-white hover:scale-105 transform shadow-md'}\n                focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-offset-2 focus:ring-offset-green-500\n              `,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white/15 backdrop-blur-md rounded-3xl p-8 shadow-2xl w-full max-w-4xl flex flex-col items-center justify-center min-h-[250px]\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-green-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-xl\",\n          children: \"Generating options...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-300 text-center text-xl\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row items-center justify-center w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white text-gray-800 rounded-2xl p-6 shadow-xl flex-1 m-2 w-full md:w-auto min-h-[120px] flex items-center justify-center text-center text-2xl font-semibold mb-4 md:mb-0 transform hover:scale-105 transition-transform duration-300\",\n          children: optionA || \"Select a category and click 'Next Question'!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-3xl font-bold mx-4 hidden md:block\",\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-3xl font-bold my-4 md:hidden\",\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white text-gray-800 rounded-2xl p-6 shadow-xl flex-1 m-2 w-full md:w-auto min-h-[120px] flex items-center justify-center text-center text-2xl font-semibold transform hover:scale-105 transition-transform duration-300\",\n          children: optionB || \"Your options will appear here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row items-center justify-center gap-4 mt-8 w-full max-w-4xl\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateNew,\n        disabled: isLoading // Disable button while loading\n        ,\n        className: `\n            px-8 py-4 rounded-full text-2xl font-bold shadow-2xl transition-all duration-300 ease-in-out\n            bg-green-700 hover:bg-green-800 text-white w-full sm:w-auto\n            ${isLoading ? 'opacity-70 cursor-not-allowed' : 'hover:scale-105 transform'}\n            focus:outline-none focus:ring-4 focus:ring-green-400 focus:ring-offset-2 focus:ring-offset-emerald-700\n          `,\n        children: isLoading ? 'Generating...' : 'Next Question'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-white/70 mt-10\",\n      children: \"Powered by Google's Gemini API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Vie1cN6M+ETNqmagGiR9FRLypP4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","selectedCategory","setSelectedCategory","optionA","setOptionA","optionB","setOptionB","isLoading","setIsLoading","error","setError","history","setHistory","historyIndex","setHistoryIndex","categories","fetchOptionsFromAI","category","apiKey","prompt","chatHistory","push","role","parts","text","payload","contents","generationConfig","responseMimeType","responseSchema","type","items","minItems","maxItems","temperature","apiUrl","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","status","result","candidates","length","content","jsonString","options","parse","Array","isArray","err","console","message","handleGenerateNew","initialLoad","newOptions","newOptionA","newOptionB","newHistoryItem","prevHistory","updatedHistory","slice","prevIndex","currentQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/tripochenski/Documents/Projects/this-or-that-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\n// Main App component\nconst App = () => {\n  // State to hold the currently selected category\n  const [selectedCategory, setSelectedCategory] = useState('Everyday Life');\n  // State for the first displayed option\n  const [optionA, setOptionA] = useState('');\n  // State for the second displayed option\n  const [optionB, setOptionB] = useState('');\n  // State to indicate if options are currently being generated (for loading indicator)\n  const [isLoading, setIsLoading] = useState(false);\n  // State for error messages\n  const [error, setError] = useState('');\n\n  // History state: an array to store previously generated questions\n  // Each item will be an object like { category: string, optionA: string, optionB: string }\n  // History is still maintained internally for potential future features or debugging,\n  // but the \"Previous Question\" button is removed from the UI.\n  const [history, setHistory] = useState([]);\n  // Index to keep track of the current position in the history array\n  const [historyIndex, setHistoryIndex] = useState(-1); // -1 means no question loaded yet\n\n  // Define the categories for the \"This or That\" game\n  const categories = [\n    \"Everyday Life\",\n    \"Superpowers\",\n    \"Travel & Adventure\",\n    \"Food & Drink\",\n    \"Past or Future\",\n    \"Silly Scenarios\",\n    \"Animals\",\n    \"Personal Quirks\",\n    \"Relationships\"\n  ];\n\n  /**\n   * Fetches two \"This or That\" options from the Gemini API based on the given category.\n   * This function is responsible only for the API call and returning the raw options.\n   * @param {string} category - The category to generate options for.\n   * @returns {Promise<string[]>} - A promise that resolves to an array of two strings [option1, option2].\n   */\n  const fetchOptionsFromAI = useCallback(async (category) => {\n    setError(''); // Clear any previous errors\n    try {\n      // In the Canvas environment, process.env is not defined.\n      // The Canvas runtime automatically provides the API key in the fetch call if 'apiKey' is an empty string.\n      // For Netlify deployment, remember to change this back to process.env.REACT_APP_GEMINI_API_KEY.\n      const apiKey = \"\"; \n\n      // Construct the prompt for the AI model\n      const prompt = `Generate two distinct, highly creative, engaging, and **completely unique** \"This or That\" options for the category \"${category}\".\n      **Crucially, ensure that the two options use different primary keywords and concepts to avoid any repetition or similarity in wording, even if subtle.**\n      The options should be short phrases and present a clear dilemma.\n      \n      Example for \"Food & Drink\":\n      - \"Eat only bland food for life\"\n      - \"Eat only extremely spicy food for life\"\n      \n      Example for \"Superpowers\":\n      - \"Ability to fly anywhere instantly\"\n      - \"Ability to control minds but only while sleeping\"\n\n      Provide the response in a JSON array format with two strings, like:\n      [\"Option 1 Text\", \"Option 2 Text\"]`;\n\n      // Chat history for the API request\n      let chatHistory = [];\n      chatHistory.push({ role: \"user\", parts: [{ text: prompt }] });\n\n      // Payload for the Gemini API request\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          responseMimeType: \"application/json\", // Request JSON output\n          responseSchema: {\n            type: \"ARRAY\", // Expect an array\n            items: {\n              type: \"STRING\" // Each item in the array should be a string\n            },\n            minItems: 2, // Ensure at least two items\n            maxItems: 2 // Ensure exactly two items\n          },\n          temperature: 1.0, // MAX temperature for highest randomness and creativity\n          // topP: 0.95, // Can also experiment with topP for diversity\n        }\n      };\n      // --- END ENHANCED PROMPT AND GENERATION CONFIG ---\n\n      // API URL for Gemini 2.0 Flash\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n      // Make the fetch call to the Gemini API\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      });\n\n      // Check if the response is successful\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`HTTP error! Status: ${response.status}. Details: ${JSON.stringify(errorData)}`);\n      }\n\n      // Parse the JSON response\n      const result = await response.json();\n\n      if (\n        result.candidates &&\n        result.candidates.length > 0 &&\n        result.candidates[0].content &&\n        result.candidates[0].content.parts &&\n        result.candidates[0].content.parts.length > 0\n      ) {\n        const jsonString = result.candidates[0].content.parts[0].text;\n        const options = JSON.parse(jsonString);\n\n        if (Array.isArray(options) && options.length === 2 &&\n            typeof options[0] === 'string' && typeof options[1] === 'string') {\n          return options;\n        } else {\n          throw new Error('AI response format was unexpected. Expected an array of two strings.');\n        }\n      } else {\n        throw new Error('Failed to generate options from AI. Response was empty or malformed.');\n      }\n    } catch (err) {\n      console.error(\"Error fetching options:\", err);\n      setError(`Failed to fetch options: ${err.message}. Please check your network or API key configuration.`);\n      return ['', ''];\n    }\n  }, []);\n\n  /**\n   * Generates new options, adds them to history, and updates the display.\n   * This is called when the \"Next Question\" button is clicked or a new category is selected.\n   */\n  const handleGenerateNew = useCallback(async (initialLoad = false) => {\n    setIsLoading(true); // Set loading state to true\n    const newOptions = await fetchOptionsFromAI(selectedCategory);\n    const [newOptionA, newOptionB] = newOptions;\n\n    // Only add to history if options were successfully generated and it's not an initial empty state\n    if (newOptionA || newOptionB) { // Check if at least one option has content\n        const newHistoryItem = {\n          category: selectedCategory,\n          optionA: newOptionA,\n          optionB: newOptionB\n        };\n\n        setHistory((prevHistory) => {\n          // If we are not at the end of the history, truncate the \"future\" history\n          const updatedHistory = initialLoad ? [] : prevHistory.slice(0, historyIndex + 1);\n          return [...updatedHistory, newHistoryItem];\n        });\n\n        // Update history index to point to the newly added item\n        setHistoryIndex((prevIndex) => initialLoad ? 0 : prevIndex + 1);\n    } else {\n        // If options failed to generate, clear them from display\n        setOptionA('');\n        setOptionB('');\n    }\n\n    // Set the displayed options\n    setOptionA(newOptionA);\n    setOptionB(newOptionB);\n    setIsLoading(false); // Reset loading state\n  }, [selectedCategory, fetchOptionsFromAI, historyIndex]); // Dependencies for useCallback\n\n  // handlePrevious function is removed as the button is removed.\n  // The history state management remains, but is not exposed via a UI button.\n\n  // Effect to handle initial load and category changes\n  useEffect(() => {\n    const currentQuestion = history[historyIndex];\n    if (!currentQuestion || currentQuestion.category !== selectedCategory) {\n        handleGenerateNew(historyIndex === -1); // Pass true for initial load\n    }\n  }, [selectedCategory, handleGenerateNew, history, historyIndex]); // Dependencies for useEffect\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-600 to-emerald-700 flex flex-col items-center justify-center p-4 font-sans text-white\">\n      {/* App Title */}\n      <h1 className=\"text-5xl font-extrabold mb-8 drop-shadow-lg text-center\">This or That?</h1>\n\n      {/* Category Selection */}\n      <div className=\"bg-white/10 backdrop-blur-md rounded-2xl p-6 shadow-xl mb-8 w-full max-w-4xl\">\n        <h2 className=\"text-2xl font-semibold mb-4 text-center\">Choose a Category:</h2>\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-3\">\n          {categories.map((category) => (\n            <button\n              key={category}\n              onClick={() => setSelectedCategory(category)}\n              className={`\n                px-5 py-3 rounded-xl text-lg font-medium transition-all duration-300 ease-in-out\n                ${selectedCategory === category\n                  ? 'bg-emerald-800 text-white shadow-lg scale-105 transform' // Darker emerald for selected\n                  : 'bg-green-700 hover:bg-green-600 text-white hover:scale-105 transform shadow-md'}\n                focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-offset-2 focus:ring-offset-green-500\n              `}\n            >\n              {category}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Options Display Area */}\n      <div className=\"bg-white/15 backdrop-blur-md rounded-3xl p-8 shadow-2xl w-full max-w-4xl flex flex-col items-center justify-center min-h-[250px]\">\n        {isLoading ? (\n          <div className=\"flex flex-col items-center\">\n            {/* Simple spinner */}\n            <div className=\"animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-green-300\"></div> {/* Green spinner */}\n            <p className=\"mt-4 text-xl\">Generating options...</p>\n          </div>\n        ) : error ? (\n          <p className=\"text-red-300 text-center text-xl\">{error}</p>\n        ) : (\n          <div className=\"flex flex-col md:flex-row items-center justify-center w-full\">\n            {/* Option A */}\n            <div className=\"bg-white text-gray-800 rounded-2xl p-6 shadow-xl flex-1 m-2 w-full md:w-auto min-h-[120px] flex items-center justify-center text-center text-2xl font-semibold mb-4 md:mb-0 transform hover:scale-105 transition-transform duration-300\">\n              {optionA || \"Select a category and click 'Next Question'!\"}\n            </div>\n\n            <p className=\"text-white text-3xl font-bold mx-4 hidden md:block\">OR</p>\n            <p className=\"text-white text-3xl font-bold my-4 md:hidden\">OR</p>\n\n            {/* Option B */}\n            <div className=\"bg-white text-gray-800 rounded-2xl p-6 shadow-xl flex-1 m-2 w-full md:w-auto min-h-[120px] flex items-center justify-center text-center text-2xl font-semibold transform hover:scale-105 transition-transform duration-300\">\n              {optionB || \"Your options will appear here.\"}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Navigation and Generate Buttons */}\n      <div className=\"flex flex-col sm:flex-row items-center justify-center gap-4 mt-8 w-full max-w-4xl\">\n        {/* Previous Question button removed as requested */}\n        {/* <button\n          onClick={handlePrevious}\n          disabled={isLoading || historyIndex <= 0}\n          className={`\n            px-6 py-3 rounded-full text-xl font-bold shadow-lg transition-all duration-300 ease-in-out\n            bg-green-500 hover:bg-green-600 text-white\n            ${isLoading || historyIndex <= 0 ? 'opacity-70 cursor-not-allowed' : 'hover:scale-105 transform'}\n            focus:outline-none focus:ring-4 focus:ring-green-300 focus:ring-offset-2 focus:ring-offset-emerald-700\n          `}\n        >\n          Previous Question\n        </button> */}\n\n        <button\n          onClick={handleGenerateNew}\n          disabled={isLoading} // Disable button while loading\n          className={`\n            px-8 py-4 rounded-full text-2xl font-bold shadow-2xl transition-all duration-300 ease-in-out\n            bg-green-700 hover:bg-green-800 text-white w-full sm:w-auto\n            ${isLoading ? 'opacity-70 cursor-not-allowed' : 'hover:scale-105 transform'}\n            focus:outline-none focus:ring-4 focus:ring-green-400 focus:ring-offset-2 focus:ring-offset-emerald-700\n          `}\n        >\n          {isLoading ? 'Generating...' : 'Next Question'}\n        </button>\n      </div>\n\n      {/* Footer / Credits */}\n      <p className=\"text-sm text-white/70 mt-10\">\n        Powered by Google's Gemini API\n      </p>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}